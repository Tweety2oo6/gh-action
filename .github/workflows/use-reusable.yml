name: Using Reusable workflow
on:
  push:
    branches:
      - main
    paths:
      - 'README.md'
jobs:
  lint:
    runs-on: self-hosted
    container:
      image: ubuntu:latest # container to run inside
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: self-hosted
    container:
      image: ubuntu:latest # container to run inside
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: self-hosted
    container:
      image: ubuntu:latest # container to run inside
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yaml
    with:
      artifact_name: dist-files
  print-deploy-results:
    needs: deploy
    runs-on: self-hosted
    container:
      image: ubuntu:latest # container to run inside
    steps:
      - name: Print deploy outputs
        run: |
          echo "Deploy step outcome: ${{ needs.deploy.outputs.deploy-info }}"
  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: self-hosted
    container:
      image: ubuntu:latest # container to run inside
    steps:
      - name: Output information
        run: |
          echo "Something went wrong..."
          echo "${{ toJSON(github) }}"
